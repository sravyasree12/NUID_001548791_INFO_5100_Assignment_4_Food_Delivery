/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Menu.MenuDirectory;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Graphics;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sravya
 */
public class ManageOrders extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private RestaurantDirectory restaurantDirectory;
    private MenuDirectory menuDirectory;
    private OrderDirectory orderDirectory;
    
    public ManageOrders(
            JPanel userProcessContainer,
            UserAccount account, 
            EcoSystem ecoSystem, 
            RestaurantDirectory restaurantDirectory, 
            MenuDirectory menuDirectory, 
            OrderDirectory orderDirectory) {
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.account = account;
        this.restaurantDirectory = ecoSystem.getRestaurantDirectory();
        this.menuDirectory = ecoSystem.getMenuDirectory();
        this.orderDirectory = ecoSystem.getOrderDirectory();
        populateTable();
        populateDeliveryMan();
    }
    
    
    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void populateDeliveryMan(){
     
        cmbDeliveryMan.removeAllItems();
        cmbDeliveryMan.addItem(" ");
        for(DeliveryMan delman: ecoSystem.getDeliveryManDirectory().getDeliveryManList()){
            cmbDeliveryMan.addItem(delman.getName());
        
        }
    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblOrder1.getModel();
        dtm.setRowCount(0);
        
        for(Order order : ecoSystem.getOrderDirectory().getOrderList()) {
            //System.out.println("Restaurant" + account.getEmployee().getName() + "  " + order.getRestaurant().getRestaurantName());
            if(account.getEmployee().getName().equals(order.getRestaurant().getRestaurantName())) {
                Object [] row = new Object[5];
                row[0] = order;
                row[1] = order.getMenu().getDishName();
                row[2] = order.getQuantity();
                row[3] = order.getQuantity() * order.getMenu().getPrice();
                row[4] = order.getOrderStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAcceptOrder = new javax.swing.JButton();
        btnDeliverOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbDeliveryMan = new javax.swing.JComboBox<>();
        btnConfirm = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Manage Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 38, 186, -1));

        btnAcceptOrder.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAcceptOrder.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\3d check mark.png")); // NOI18N
        btnAcceptOrder.setText("Accept");
        btnAcceptOrder.setToolTipText("Accept Order");
        btnAcceptOrder.setContentAreaFilled(false);
        btnAcceptOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAcceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOrderActionPerformed(evt);
            }
        });
        add(btnAcceptOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 100, 30));

        btnDeliverOrder.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnDeliverOrder.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\deliver order.png")); // NOI18N
        btnDeliverOrder.setText("Deliver Order");
        btnDeliverOrder.setContentAreaFilled(false);
        btnDeliverOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeliverOrder.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDeliverOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliverOrderActionPerformed(evt);
            }
        });
        add(btnDeliverOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 140, 40));

        tblOrder1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblOrder1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Item Name", "Quantity", "Price", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrder1.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblOrder1.setSelectionForeground(new java.awt.Color(102, 102, 255));
        jScrollPane1.setViewportView(tblOrder1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 98, 822, 131));

        jLabel2.setText("Select Delivery Man");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 107, -1));

        cmbDeliveryMan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeliveryManActionPerformed(evt);
            }
        });
        add(cmbDeliveryMan, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 130, 20));

        btnConfirm.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConfirm.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\confirm.png")); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.setContentAreaFilled(false);
        btnConfirm.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmMouseClicked(evt);
            }
        });
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 110, 30));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setToolTipText("Back");
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 38, 40, -1));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 390, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\white.jpg")); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = (Order)tblOrder1.getValueAt(selectedRow, 0);
        if(order.getOrderStatus().equals("Order placed!")) {
            order.setOrderStatus("Order accepted!");
        }

        else {
            JOptionPane.showMessageDialog(null, "Order either accepted or completed");
            return;
        }

        populateTable();

    }//GEN-LAST:event_btnAcceptOrderActionPerformed

    private void btnDeliverOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliverOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = (Order)tblOrder1.getValueAt(selectedRow, 0);
        if(order.getOrderStatus().equals("Order accepted!")) {
            order.setOrderStatus("Order ready for delivery");
            order.setAssign(true);
        }

        else if(order.getOrderStatus().equals("Order placed!")) {
            JOptionPane.showMessageDialog(null, "Order should be accepted first");
            return;
        }

        else {
            JOptionPane.showMessageDialog(null, "Order ready for delivery");
            return;
        }

        populateTable();

    }//GEN-LAST:event_btnDeliverOrderActionPerformed

    private void btnConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmMouseClicked
        // TODO add your handling code here:
//        String name=(String) cmbDeliveryMan.getSelectedItem();
//        if(name == " "){
//            JOptionPane.showMessageDialog(null,"Select a Delivery Man","Selected Delivery Man" ,JOptionPane.WARNING_MESSAGE);
//        }
//        else{
//            JOptionPane.showMessageDialog(null,"Selected Delivery Man: " +name);
//
//        }
    }//GEN-LAST:event_btnConfirmMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeliveryManActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDeliveryManActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        
        //complete this later
         String name = (String) cmbDeliveryMan.getSelectedItem();
        if(name == " "){
            JOptionPane.showMessageDialog(null,"Select a Delivery Man","Selected Delivery Man" ,JOptionPane.WARNING_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null,"Selected Delivery Man: " + name);

        }
    }//GEN-LAST:event_btnConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDeliverOrder;
    private javax.swing.JComboBox<String> cmbDeliveryMan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrder1;
    // End of variables declaration//GEN-END:variables
}
